# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: EpiLogCI

on:
  push:
    branches: [ "main", "dev" ]
  pull_request:
    branches: [ "main", "dev" ]

env:
  FORCE_COLOR: "1"  # Make Output a little more Colorful
  PIP_DISABLE_PIP_VERSION_CHECK: "1"

jobs:
  style:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false

    steps:
      - name: Checkout EpiLog
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
            python-version-file: .python-version-default

      - name: Install tox
        run: |
          python -m pip install -U pip
          python -m pip install setuptools wheel
          pip install tox

      - name: MyPy Static Type Check
        run: |
          tox -e type

      - name: Code Linting
        run: |
          tox -e lint

  tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]

    steps:
      - name: Checkout EpiLog
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install tox
        run: |
          python -m pip install -U pip
          python -m pip install setuptools wheel
          pip install tox
          echo "TOX_VERSION=py$(echo ${{ matrix.python-version }} | tr -d .)-tests" >> $GITHUB_ENV

      - name: Pytest Unit Testing
        run: |
          tox -e ${{ env.TOX_VERSION }}

      - name: Save Coverage Data Temporarily
        uses: actions/upload-artifact@v4
        with:
          name: coverage-data-${{ matrix.python-version }}
          path: .coverage.*
          retention-days: 1
          if-no-files-found: ignore
          include-hidden-files: true

  coverage:
    runs-on: "ubuntu-latest"
    needs: [tests]
    strategy:
      fail-fast: false

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download coverage data
        uses: actions/download-artifact@v4
        with:
          pattern: coverage-data-*
          merge-multiple: true

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version-file: .python-version-default

      - name: Install Coverage
        run: |
          python -m pip install -U pip
          python -m pip install setuptools wheel
          pip install coverage

      - name: Report Testing Coverage
        run: |
          coverage combine --quiet --rcfile pyproject.toml
          coverage report --rcfile pyproject.toml --format markdown | tee $GITHUB_STEP_SUMMARY
